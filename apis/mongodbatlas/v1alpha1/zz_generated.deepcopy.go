//go:build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedConfigurationInitParameters) DeepCopyInto(out *AdvancedConfigurationInitParameters) {
	*out = *in
	if in.DefaultReadConcern != nil {
		in, out := &in.DefaultReadConcern, &out.DefaultReadConcern
		*out = new(string)
		**out = **in
	}
	if in.DefaultWriteConcern != nil {
		in, out := &in.DefaultWriteConcern, &out.DefaultWriteConcern
		*out = new(string)
		**out = **in
	}
	if in.FailIndexKeyTooLong != nil {
		in, out := &in.FailIndexKeyTooLong, &out.FailIndexKeyTooLong
		*out = new(bool)
		**out = **in
	}
	if in.JavascriptEnabled != nil {
		in, out := &in.JavascriptEnabled, &out.JavascriptEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MinimumEnabledTLSProtocol != nil {
		in, out := &in.MinimumEnabledTLSProtocol, &out.MinimumEnabledTLSProtocol
		*out = new(string)
		**out = **in
	}
	if in.NoTableScan != nil {
		in, out := &in.NoTableScan, &out.NoTableScan
		*out = new(bool)
		**out = **in
	}
	if in.OplogMinRetentionHours != nil {
		in, out := &in.OplogMinRetentionHours, &out.OplogMinRetentionHours
		*out = new(float64)
		**out = **in
	}
	if in.OplogSizeMb != nil {
		in, out := &in.OplogSizeMb, &out.OplogSizeMb
		*out = new(float64)
		**out = **in
	}
	if in.SampleRefreshIntervalBiConnector != nil {
		in, out := &in.SampleRefreshIntervalBiConnector, &out.SampleRefreshIntervalBiConnector
		*out = new(float64)
		**out = **in
	}
	if in.SampleSizeBiConnector != nil {
		in, out := &in.SampleSizeBiConnector, &out.SampleSizeBiConnector
		*out = new(float64)
		**out = **in
	}
	if in.TransactionLifetimeLimitSeconds != nil {
		in, out := &in.TransactionLifetimeLimitSeconds, &out.TransactionLifetimeLimitSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedConfigurationInitParameters.
func (in *AdvancedConfigurationInitParameters) DeepCopy() *AdvancedConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedConfigurationObservation) DeepCopyInto(out *AdvancedConfigurationObservation) {
	*out = *in
	if in.DefaultReadConcern != nil {
		in, out := &in.DefaultReadConcern, &out.DefaultReadConcern
		*out = new(string)
		**out = **in
	}
	if in.DefaultWriteConcern != nil {
		in, out := &in.DefaultWriteConcern, &out.DefaultWriteConcern
		*out = new(string)
		**out = **in
	}
	if in.FailIndexKeyTooLong != nil {
		in, out := &in.FailIndexKeyTooLong, &out.FailIndexKeyTooLong
		*out = new(bool)
		**out = **in
	}
	if in.JavascriptEnabled != nil {
		in, out := &in.JavascriptEnabled, &out.JavascriptEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MinimumEnabledTLSProtocol != nil {
		in, out := &in.MinimumEnabledTLSProtocol, &out.MinimumEnabledTLSProtocol
		*out = new(string)
		**out = **in
	}
	if in.NoTableScan != nil {
		in, out := &in.NoTableScan, &out.NoTableScan
		*out = new(bool)
		**out = **in
	}
	if in.OplogMinRetentionHours != nil {
		in, out := &in.OplogMinRetentionHours, &out.OplogMinRetentionHours
		*out = new(float64)
		**out = **in
	}
	if in.OplogSizeMb != nil {
		in, out := &in.OplogSizeMb, &out.OplogSizeMb
		*out = new(float64)
		**out = **in
	}
	if in.SampleRefreshIntervalBiConnector != nil {
		in, out := &in.SampleRefreshIntervalBiConnector, &out.SampleRefreshIntervalBiConnector
		*out = new(float64)
		**out = **in
	}
	if in.SampleSizeBiConnector != nil {
		in, out := &in.SampleSizeBiConnector, &out.SampleSizeBiConnector
		*out = new(float64)
		**out = **in
	}
	if in.TransactionLifetimeLimitSeconds != nil {
		in, out := &in.TransactionLifetimeLimitSeconds, &out.TransactionLifetimeLimitSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedConfigurationObservation.
func (in *AdvancedConfigurationObservation) DeepCopy() *AdvancedConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(AdvancedConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedConfigurationParameters) DeepCopyInto(out *AdvancedConfigurationParameters) {
	*out = *in
	if in.DefaultReadConcern != nil {
		in, out := &in.DefaultReadConcern, &out.DefaultReadConcern
		*out = new(string)
		**out = **in
	}
	if in.DefaultWriteConcern != nil {
		in, out := &in.DefaultWriteConcern, &out.DefaultWriteConcern
		*out = new(string)
		**out = **in
	}
	if in.FailIndexKeyTooLong != nil {
		in, out := &in.FailIndexKeyTooLong, &out.FailIndexKeyTooLong
		*out = new(bool)
		**out = **in
	}
	if in.JavascriptEnabled != nil {
		in, out := &in.JavascriptEnabled, &out.JavascriptEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MinimumEnabledTLSProtocol != nil {
		in, out := &in.MinimumEnabledTLSProtocol, &out.MinimumEnabledTLSProtocol
		*out = new(string)
		**out = **in
	}
	if in.NoTableScan != nil {
		in, out := &in.NoTableScan, &out.NoTableScan
		*out = new(bool)
		**out = **in
	}
	if in.OplogMinRetentionHours != nil {
		in, out := &in.OplogMinRetentionHours, &out.OplogMinRetentionHours
		*out = new(float64)
		**out = **in
	}
	if in.OplogSizeMb != nil {
		in, out := &in.OplogSizeMb, &out.OplogSizeMb
		*out = new(float64)
		**out = **in
	}
	if in.SampleRefreshIntervalBiConnector != nil {
		in, out := &in.SampleRefreshIntervalBiConnector, &out.SampleRefreshIntervalBiConnector
		*out = new(float64)
		**out = **in
	}
	if in.SampleSizeBiConnector != nil {
		in, out := &in.SampleSizeBiConnector, &out.SampleSizeBiConnector
		*out = new(float64)
		**out = **in
	}
	if in.TransactionLifetimeLimitSeconds != nil {
		in, out := &in.TransactionLifetimeLimitSeconds, &out.TransactionLifetimeLimitSeconds
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedConfigurationParameters.
func (in *AdvancedConfigurationParameters) DeepCopy() *AdvancedConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Auditing) DeepCopyInto(out *Auditing) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Auditing.
func (in *Auditing) DeepCopy() *Auditing {
	if in == nil {
		return nil
	}
	out := new(Auditing)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Auditing) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditingInitParameters) DeepCopyInto(out *AuditingInitParameters) {
	*out = *in
	if in.AuditAuthorizationSuccess != nil {
		in, out := &in.AuditAuthorizationSuccess, &out.AuditAuthorizationSuccess
		*out = new(bool)
		**out = **in
	}
	if in.AuditFilter != nil {
		in, out := &in.AuditFilter, &out.AuditFilter
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditingInitParameters.
func (in *AuditingInitParameters) DeepCopy() *AuditingInitParameters {
	if in == nil {
		return nil
	}
	out := new(AuditingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditingList) DeepCopyInto(out *AuditingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Auditing, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditingList.
func (in *AuditingList) DeepCopy() *AuditingList {
	if in == nil {
		return nil
	}
	out := new(AuditingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AuditingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditingObservation) DeepCopyInto(out *AuditingObservation) {
	*out = *in
	if in.AuditAuthorizationSuccess != nil {
		in, out := &in.AuditAuthorizationSuccess, &out.AuditAuthorizationSuccess
		*out = new(bool)
		**out = **in
	}
	if in.AuditFilter != nil {
		in, out := &in.AuditFilter, &out.AuditFilter
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationType != nil {
		in, out := &in.ConfigurationType, &out.ConfigurationType
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditingObservation.
func (in *AuditingObservation) DeepCopy() *AuditingObservation {
	if in == nil {
		return nil
	}
	out := new(AuditingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditingParameters) DeepCopyInto(out *AuditingParameters) {
	*out = *in
	if in.AuditAuthorizationSuccess != nil {
		in, out := &in.AuditAuthorizationSuccess, &out.AuditAuthorizationSuccess
		*out = new(bool)
		**out = **in
	}
	if in.AuditFilter != nil {
		in, out := &in.AuditFilter, &out.AuditFilter
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditingParameters.
func (in *AuditingParameters) DeepCopy() *AuditingParameters {
	if in == nil {
		return nil
	}
	out := new(AuditingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditingSpec) DeepCopyInto(out *AuditingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditingSpec.
func (in *AuditingSpec) DeepCopy() *AuditingSpec {
	if in == nil {
		return nil
	}
	out := new(AuditingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AuditingStatus) DeepCopyInto(out *AuditingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AuditingStatus.
func (in *AuditingStatus) DeepCopy() *AuditingStatus {
	if in == nil {
		return nil
	}
	out := new(AuditingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BiConnectorConfigInitParameters) DeepCopyInto(out *BiConnectorConfigInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ReadPreference != nil {
		in, out := &in.ReadPreference, &out.ReadPreference
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BiConnectorConfigInitParameters.
func (in *BiConnectorConfigInitParameters) DeepCopy() *BiConnectorConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(BiConnectorConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BiConnectorConfigObservation) DeepCopyInto(out *BiConnectorConfigObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ReadPreference != nil {
		in, out := &in.ReadPreference, &out.ReadPreference
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BiConnectorConfigObservation.
func (in *BiConnectorConfigObservation) DeepCopy() *BiConnectorConfigObservation {
	if in == nil {
		return nil
	}
	out := new(BiConnectorConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BiConnectorConfigParameters) DeepCopyInto(out *BiConnectorConfigParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ReadPreference != nil {
		in, out := &in.ReadPreference, &out.ReadPreference
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BiConnectorConfigParameters.
func (in *BiConnectorConfigParameters) DeepCopy() *BiConnectorConfigParameters {
	if in == nil {
		return nil
	}
	out := new(BiConnectorConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cluster) DeepCopyInto(out *Cluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cluster.
func (in *Cluster) DeepCopy() *Cluster {
	if in == nil {
		return nil
	}
	out := new(Cluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterInitParameters) DeepCopyInto(out *ClusterInitParameters) {
	*out = *in
	if in.AcceptDataRisksAndForceReplicaSetReconfig != nil {
		in, out := &in.AcceptDataRisksAndForceReplicaSetReconfig, &out.AcceptDataRisksAndForceReplicaSetReconfig
		*out = new(string)
		**out = **in
	}
	if in.AdvancedConfiguration != nil {
		in, out := &in.AdvancedConfiguration, &out.AdvancedConfiguration
		*out = make([]AdvancedConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoScalingComputeEnabled != nil {
		in, out := &in.AutoScalingComputeEnabled, &out.AutoScalingComputeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoScalingComputeScaleDownEnabled != nil {
		in, out := &in.AutoScalingComputeScaleDownEnabled, &out.AutoScalingComputeScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoScalingDiskGbEnabled != nil {
		in, out := &in.AutoScalingDiskGbEnabled, &out.AutoScalingDiskGbEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BackingProviderName != nil {
		in, out := &in.BackingProviderName, &out.BackingProviderName
		*out = new(string)
		**out = **in
	}
	if in.BackupEnabled != nil {
		in, out := &in.BackupEnabled, &out.BackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BiConnectorConfig != nil {
		in, out := &in.BiConnectorConfig, &out.BiConnectorConfig
		*out = make([]BiConnectorConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudBackup != nil {
		in, out := &in.CloudBackup, &out.CloudBackup
		*out = new(bool)
		**out = **in
	}
	if in.ClusterType != nil {
		in, out := &in.ClusterType, &out.ClusterType
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EncryptionAtRestProvider != nil {
		in, out := &in.EncryptionAtRestProvider, &out.EncryptionAtRestProvider
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]LabelsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoDBMajorVersion != nil {
		in, out := &in.MongoDBMajorVersion, &out.MongoDBMajorVersion
		*out = new(string)
		**out = **in
	}
	if in.NumShards != nil {
		in, out := &in.NumShards, &out.NumShards
		*out = new(float64)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.PitEnabled != nil {
		in, out := &in.PitEnabled, &out.PitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProviderAutoScalingComputeMaxInstanceSize != nil {
		in, out := &in.ProviderAutoScalingComputeMaxInstanceSize, &out.ProviderAutoScalingComputeMaxInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ProviderAutoScalingComputeMinInstanceSize != nil {
		in, out := &in.ProviderAutoScalingComputeMinInstanceSize, &out.ProviderAutoScalingComputeMinInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ProviderDiskIops != nil {
		in, out := &in.ProviderDiskIops, &out.ProviderDiskIops
		*out = new(float64)
		**out = **in
	}
	if in.ProviderDiskTypeName != nil {
		in, out := &in.ProviderDiskTypeName, &out.ProviderDiskTypeName
		*out = new(string)
		**out = **in
	}
	if in.ProviderEncryptEBSVolume != nil {
		in, out := &in.ProviderEncryptEBSVolume, &out.ProviderEncryptEBSVolume
		*out = new(bool)
		**out = **in
	}
	if in.ProviderInstanceSizeName != nil {
		in, out := &in.ProviderInstanceSizeName, &out.ProviderInstanceSizeName
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ProviderRegionName != nil {
		in, out := &in.ProviderRegionName, &out.ProviderRegionName
		*out = new(string)
		**out = **in
	}
	if in.ProviderVolumeType != nil {
		in, out := &in.ProviderVolumeType, &out.ProviderVolumeType
		*out = new(string)
		**out = **in
	}
	if in.ReplicationFactor != nil {
		in, out := &in.ReplicationFactor, &out.ReplicationFactor
		*out = new(float64)
		**out = **in
	}
	if in.ReplicationSpecs != nil {
		in, out := &in.ReplicationSpecs, &out.ReplicationSpecs
		*out = make([]ReplicationSpecsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetainBackupsEnabled != nil {
		in, out := &in.RetainBackupsEnabled, &out.RetainBackupsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]TagsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerminationProtectionEnabled != nil {
		in, out := &in.TerminationProtectionEnabled, &out.TerminationProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VersionReleaseSystem != nil {
		in, out := &in.VersionReleaseSystem, &out.VersionReleaseSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterInitParameters.
func (in *ClusterInitParameters) DeepCopy() *ClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterList) DeepCopyInto(out *ClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterList.
func (in *ClusterList) DeepCopy() *ClusterList {
	if in == nil {
		return nil
	}
	out := new(ClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterObservation) DeepCopyInto(out *ClusterObservation) {
	*out = *in
	if in.AcceptDataRisksAndForceReplicaSetReconfig != nil {
		in, out := &in.AcceptDataRisksAndForceReplicaSetReconfig, &out.AcceptDataRisksAndForceReplicaSetReconfig
		*out = new(string)
		**out = **in
	}
	if in.AdvancedConfiguration != nil {
		in, out := &in.AdvancedConfiguration, &out.AdvancedConfiguration
		*out = make([]AdvancedConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoScalingComputeEnabled != nil {
		in, out := &in.AutoScalingComputeEnabled, &out.AutoScalingComputeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoScalingComputeScaleDownEnabled != nil {
		in, out := &in.AutoScalingComputeScaleDownEnabled, &out.AutoScalingComputeScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoScalingDiskGbEnabled != nil {
		in, out := &in.AutoScalingDiskGbEnabled, &out.AutoScalingDiskGbEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BackingProviderName != nil {
		in, out := &in.BackingProviderName, &out.BackingProviderName
		*out = new(string)
		**out = **in
	}
	if in.BackupEnabled != nil {
		in, out := &in.BackupEnabled, &out.BackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BiConnectorConfig != nil {
		in, out := &in.BiConnectorConfig, &out.BiConnectorConfig
		*out = make([]BiConnectorConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudBackup != nil {
		in, out := &in.CloudBackup, &out.CloudBackup
		*out = new(bool)
		**out = **in
	}
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterType != nil {
		in, out := &in.ClusterType, &out.ClusterType
		*out = new(string)
		**out = **in
	}
	if in.ConnectionStrings != nil {
		in, out := &in.ConnectionStrings, &out.ConnectionStrings
		*out = make([]ConnectionStringsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ContainerID != nil {
		in, out := &in.ContainerID, &out.ContainerID
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EncryptionAtRestProvider != nil {
		in, out := &in.EncryptionAtRestProvider, &out.EncryptionAtRestProvider
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]LabelsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoDBMajorVersion != nil {
		in, out := &in.MongoDBMajorVersion, &out.MongoDBMajorVersion
		*out = new(string)
		**out = **in
	}
	if in.MongoDBVersion != nil {
		in, out := &in.MongoDBVersion, &out.MongoDBVersion
		*out = new(string)
		**out = **in
	}
	if in.MongoURI != nil {
		in, out := &in.MongoURI, &out.MongoURI
		*out = new(string)
		**out = **in
	}
	if in.MongoURIUpdated != nil {
		in, out := &in.MongoURIUpdated, &out.MongoURIUpdated
		*out = new(string)
		**out = **in
	}
	if in.MongoURIWithOptions != nil {
		in, out := &in.MongoURIWithOptions, &out.MongoURIWithOptions
		*out = new(string)
		**out = **in
	}
	if in.NumShards != nil {
		in, out := &in.NumShards, &out.NumShards
		*out = new(float64)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.PitEnabled != nil {
		in, out := &in.PitEnabled, &out.PitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProviderAutoScalingComputeMaxInstanceSize != nil {
		in, out := &in.ProviderAutoScalingComputeMaxInstanceSize, &out.ProviderAutoScalingComputeMaxInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ProviderAutoScalingComputeMinInstanceSize != nil {
		in, out := &in.ProviderAutoScalingComputeMinInstanceSize, &out.ProviderAutoScalingComputeMinInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ProviderDiskIops != nil {
		in, out := &in.ProviderDiskIops, &out.ProviderDiskIops
		*out = new(float64)
		**out = **in
	}
	if in.ProviderDiskTypeName != nil {
		in, out := &in.ProviderDiskTypeName, &out.ProviderDiskTypeName
		*out = new(string)
		**out = **in
	}
	if in.ProviderEncryptEBSVolume != nil {
		in, out := &in.ProviderEncryptEBSVolume, &out.ProviderEncryptEBSVolume
		*out = new(bool)
		**out = **in
	}
	if in.ProviderEncryptEBSVolumeFlag != nil {
		in, out := &in.ProviderEncryptEBSVolumeFlag, &out.ProviderEncryptEBSVolumeFlag
		*out = new(bool)
		**out = **in
	}
	if in.ProviderInstanceSizeName != nil {
		in, out := &in.ProviderInstanceSizeName, &out.ProviderInstanceSizeName
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ProviderRegionName != nil {
		in, out := &in.ProviderRegionName, &out.ProviderRegionName
		*out = new(string)
		**out = **in
	}
	if in.ProviderVolumeType != nil {
		in, out := &in.ProviderVolumeType, &out.ProviderVolumeType
		*out = new(string)
		**out = **in
	}
	if in.ReplicationFactor != nil {
		in, out := &in.ReplicationFactor, &out.ReplicationFactor
		*out = new(float64)
		**out = **in
	}
	if in.ReplicationSpecs != nil {
		in, out := &in.ReplicationSpecs, &out.ReplicationSpecs
		*out = make([]ReplicationSpecsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetainBackupsEnabled != nil {
		in, out := &in.RetainBackupsEnabled, &out.RetainBackupsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.SnapshotBackupPolicy != nil {
		in, out := &in.SnapshotBackupPolicy, &out.SnapshotBackupPolicy
		*out = make([]SnapshotBackupPolicyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SrvAddress != nil {
		in, out := &in.SrvAddress, &out.SrvAddress
		*out = new(string)
		**out = **in
	}
	if in.StateName != nil {
		in, out := &in.StateName, &out.StateName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]TagsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerminationProtectionEnabled != nil {
		in, out := &in.TerminationProtectionEnabled, &out.TerminationProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VersionReleaseSystem != nil {
		in, out := &in.VersionReleaseSystem, &out.VersionReleaseSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterObservation.
func (in *ClusterObservation) DeepCopy() *ClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterParameters) DeepCopyInto(out *ClusterParameters) {
	*out = *in
	if in.AcceptDataRisksAndForceReplicaSetReconfig != nil {
		in, out := &in.AcceptDataRisksAndForceReplicaSetReconfig, &out.AcceptDataRisksAndForceReplicaSetReconfig
		*out = new(string)
		**out = **in
	}
	if in.AdvancedConfiguration != nil {
		in, out := &in.AdvancedConfiguration, &out.AdvancedConfiguration
		*out = make([]AdvancedConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AutoScalingComputeEnabled != nil {
		in, out := &in.AutoScalingComputeEnabled, &out.AutoScalingComputeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoScalingComputeScaleDownEnabled != nil {
		in, out := &in.AutoScalingComputeScaleDownEnabled, &out.AutoScalingComputeScaleDownEnabled
		*out = new(bool)
		**out = **in
	}
	if in.AutoScalingDiskGbEnabled != nil {
		in, out := &in.AutoScalingDiskGbEnabled, &out.AutoScalingDiskGbEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BackingProviderName != nil {
		in, out := &in.BackingProviderName, &out.BackingProviderName
		*out = new(string)
		**out = **in
	}
	if in.BackupEnabled != nil {
		in, out := &in.BackupEnabled, &out.BackupEnabled
		*out = new(bool)
		**out = **in
	}
	if in.BiConnectorConfig != nil {
		in, out := &in.BiConnectorConfig, &out.BiConnectorConfig
		*out = make([]BiConnectorConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CloudBackup != nil {
		in, out := &in.CloudBackup, &out.CloudBackup
		*out = new(bool)
		**out = **in
	}
	if in.ClusterType != nil {
		in, out := &in.ClusterType, &out.ClusterType
		*out = new(string)
		**out = **in
	}
	if in.DiskSizeGb != nil {
		in, out := &in.DiskSizeGb, &out.DiskSizeGb
		*out = new(float64)
		**out = **in
	}
	if in.EncryptionAtRestProvider != nil {
		in, out := &in.EncryptionAtRestProvider, &out.EncryptionAtRestProvider
		*out = new(string)
		**out = **in
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]LabelsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MongoDBMajorVersion != nil {
		in, out := &in.MongoDBMajorVersion, &out.MongoDBMajorVersion
		*out = new(string)
		**out = **in
	}
	if in.NumShards != nil {
		in, out := &in.NumShards, &out.NumShards
		*out = new(float64)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.PitEnabled != nil {
		in, out := &in.PitEnabled, &out.PitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProviderAutoScalingComputeMaxInstanceSize != nil {
		in, out := &in.ProviderAutoScalingComputeMaxInstanceSize, &out.ProviderAutoScalingComputeMaxInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ProviderAutoScalingComputeMinInstanceSize != nil {
		in, out := &in.ProviderAutoScalingComputeMinInstanceSize, &out.ProviderAutoScalingComputeMinInstanceSize
		*out = new(string)
		**out = **in
	}
	if in.ProviderDiskIops != nil {
		in, out := &in.ProviderDiskIops, &out.ProviderDiskIops
		*out = new(float64)
		**out = **in
	}
	if in.ProviderDiskTypeName != nil {
		in, out := &in.ProviderDiskTypeName, &out.ProviderDiskTypeName
		*out = new(string)
		**out = **in
	}
	if in.ProviderEncryptEBSVolume != nil {
		in, out := &in.ProviderEncryptEBSVolume, &out.ProviderEncryptEBSVolume
		*out = new(bool)
		**out = **in
	}
	if in.ProviderInstanceSizeName != nil {
		in, out := &in.ProviderInstanceSizeName, &out.ProviderInstanceSizeName
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.ProviderRegionName != nil {
		in, out := &in.ProviderRegionName, &out.ProviderRegionName
		*out = new(string)
		**out = **in
	}
	if in.ProviderVolumeType != nil {
		in, out := &in.ProviderVolumeType, &out.ProviderVolumeType
		*out = new(string)
		**out = **in
	}
	if in.ReplicationFactor != nil {
		in, out := &in.ReplicationFactor, &out.ReplicationFactor
		*out = new(float64)
		**out = **in
	}
	if in.ReplicationSpecs != nil {
		in, out := &in.ReplicationSpecs, &out.ReplicationSpecs
		*out = make([]ReplicationSpecsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RetainBackupsEnabled != nil {
		in, out := &in.RetainBackupsEnabled, &out.RetainBackupsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make([]TagsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TerminationProtectionEnabled != nil {
		in, out := &in.TerminationProtectionEnabled, &out.TerminationProtectionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.VersionReleaseSystem != nil {
		in, out := &in.VersionReleaseSystem, &out.VersionReleaseSystem
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterParameters.
func (in *ClusterParameters) DeepCopy() *ClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterSpec) DeepCopyInto(out *ClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterSpec.
func (in *ClusterSpec) DeepCopy() *ClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterStatus) DeepCopyInto(out *ClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterStatus.
func (in *ClusterStatus) DeepCopy() *ClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringsInitParameters) DeepCopyInto(out *ConnectionStringsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringsInitParameters.
func (in *ConnectionStringsInitParameters) DeepCopy() *ConnectionStringsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringsObservation) DeepCopyInto(out *ConnectionStringsObservation) {
	*out = *in
	if in.Private != nil {
		in, out := &in.Private, &out.Private
		*out = new(string)
		**out = **in
	}
	if in.PrivateEndpoint != nil {
		in, out := &in.PrivateEndpoint, &out.PrivateEndpoint
		*out = make([]PrivateEndpointObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PrivateSrv != nil {
		in, out := &in.PrivateSrv, &out.PrivateSrv
		*out = new(string)
		**out = **in
	}
	if in.Standard != nil {
		in, out := &in.Standard, &out.Standard
		*out = new(string)
		**out = **in
	}
	if in.StandardSrv != nil {
		in, out := &in.StandardSrv, &out.StandardSrv
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringsObservation.
func (in *ConnectionStringsObservation) DeepCopy() *ConnectionStringsObservation {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConnectionStringsParameters) DeepCopyInto(out *ConnectionStringsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConnectionStringsParameters.
func (in *ConnectionStringsParameters) DeepCopy() *ConnectionStringsParameters {
	if in == nil {
		return nil
	}
	out := new(ConnectionStringsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointsInitParameters) DeepCopyInto(out *EndpointsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointsInitParameters.
func (in *EndpointsInitParameters) DeepCopy() *EndpointsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointsObservation) DeepCopyInto(out *EndpointsObservation) {
	*out = *in
	if in.EndpointID != nil {
		in, out := &in.EndpointID, &out.EndpointID
		*out = new(string)
		**out = **in
	}
	if in.ProviderName != nil {
		in, out := &in.ProviderName, &out.ProviderName
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointsObservation.
func (in *EndpointsObservation) DeepCopy() *EndpointsObservation {
	if in == nil {
		return nil
	}
	out := new(EndpointsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointsParameters) DeepCopyInto(out *EndpointsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointsParameters.
func (in *EndpointsParameters) DeepCopy() *EndpointsParameters {
	if in == nil {
		return nil
	}
	out := new(EndpointsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsInitParameters) DeepCopyInto(out *LabelsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsInitParameters.
func (in *LabelsInitParameters) DeepCopy() *LabelsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LabelsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsObservation) DeepCopyInto(out *LabelsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsObservation.
func (in *LabelsObservation) DeepCopy() *LabelsObservation {
	if in == nil {
		return nil
	}
	out := new(LabelsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelsParameters) DeepCopyInto(out *LabelsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelsParameters.
func (in *LabelsParameters) DeepCopy() *LabelsParameters {
	if in == nil {
		return nil
	}
	out := new(LabelsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LimitsInitParameters) DeepCopyInto(out *LimitsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LimitsInitParameters.
func (in *LimitsInitParameters) DeepCopy() *LimitsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LimitsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LimitsObservation) DeepCopyInto(out *LimitsObservation) {
	*out = *in
	if in.CurrentUsage != nil {
		in, out := &in.CurrentUsage, &out.CurrentUsage
		*out = new(float64)
		**out = **in
	}
	if in.DefaultLimit != nil {
		in, out := &in.DefaultLimit, &out.DefaultLimit
		*out = new(float64)
		**out = **in
	}
	if in.MaximumLimit != nil {
		in, out := &in.MaximumLimit, &out.MaximumLimit
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LimitsObservation.
func (in *LimitsObservation) DeepCopy() *LimitsObservation {
	if in == nil {
		return nil
	}
	out := new(LimitsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LimitsParameters) DeepCopyInto(out *LimitsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LimitsParameters.
func (in *LimitsParameters) DeepCopy() *LimitsParameters {
	if in == nil {
		return nil
	}
	out := new(LimitsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Organization) DeepCopyInto(out *Organization) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Organization.
func (in *Organization) DeepCopy() *Organization {
	if in == nil {
		return nil
	}
	out := new(Organization)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Organization) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationInitParameters) DeepCopyInto(out *OrganizationInitParameters) {
	*out = *in
	if in.APIAccessListRequired != nil {
		in, out := &in.APIAccessListRequired, &out.APIAccessListRequired
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FederationSettingsID != nil {
		in, out := &in.FederationSettingsID, &out.FederationSettingsID
		*out = new(string)
		**out = **in
	}
	if in.MultiFactorAuthRequired != nil {
		in, out := &in.MultiFactorAuthRequired, &out.MultiFactorAuthRequired
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgOwnerID != nil {
		in, out := &in.OrgOwnerID, &out.OrgOwnerID
		*out = new(string)
		**out = **in
	}
	if in.RestrictEmployeeAccess != nil {
		in, out := &in.RestrictEmployeeAccess, &out.RestrictEmployeeAccess
		*out = new(bool)
		**out = **in
	}
	if in.RoleNames != nil {
		in, out := &in.RoleNames, &out.RoleNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationInitParameters.
func (in *OrganizationInitParameters) DeepCopy() *OrganizationInitParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationList) DeepCopyInto(out *OrganizationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Organization, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationList.
func (in *OrganizationList) DeepCopy() *OrganizationList {
	if in == nil {
		return nil
	}
	out := new(OrganizationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *OrganizationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationObservation) DeepCopyInto(out *OrganizationObservation) {
	*out = *in
	if in.APIAccessListRequired != nil {
		in, out := &in.APIAccessListRequired, &out.APIAccessListRequired
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FederationSettingsID != nil {
		in, out := &in.FederationSettingsID, &out.FederationSettingsID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MultiFactorAuthRequired != nil {
		in, out := &in.MultiFactorAuthRequired, &out.MultiFactorAuthRequired
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgOwnerID != nil {
		in, out := &in.OrgOwnerID, &out.OrgOwnerID
		*out = new(string)
		**out = **in
	}
	if in.RestrictEmployeeAccess != nil {
		in, out := &in.RestrictEmployeeAccess, &out.RestrictEmployeeAccess
		*out = new(bool)
		**out = **in
	}
	if in.RoleNames != nil {
		in, out := &in.RoleNames, &out.RoleNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationObservation.
func (in *OrganizationObservation) DeepCopy() *OrganizationObservation {
	if in == nil {
		return nil
	}
	out := new(OrganizationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationParameters) DeepCopyInto(out *OrganizationParameters) {
	*out = *in
	if in.APIAccessListRequired != nil {
		in, out := &in.APIAccessListRequired, &out.APIAccessListRequired
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FederationSettingsID != nil {
		in, out := &in.FederationSettingsID, &out.FederationSettingsID
		*out = new(string)
		**out = **in
	}
	if in.MultiFactorAuthRequired != nil {
		in, out := &in.MultiFactorAuthRequired, &out.MultiFactorAuthRequired
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgOwnerID != nil {
		in, out := &in.OrgOwnerID, &out.OrgOwnerID
		*out = new(string)
		**out = **in
	}
	if in.RestrictEmployeeAccess != nil {
		in, out := &in.RestrictEmployeeAccess, &out.RestrictEmployeeAccess
		*out = new(bool)
		**out = **in
	}
	if in.RoleNames != nil {
		in, out := &in.RoleNames, &out.RoleNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationParameters.
func (in *OrganizationParameters) DeepCopy() *OrganizationParameters {
	if in == nil {
		return nil
	}
	out := new(OrganizationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationSpec) DeepCopyInto(out *OrganizationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationSpec.
func (in *OrganizationSpec) DeepCopy() *OrganizationSpec {
	if in == nil {
		return nil
	}
	out := new(OrganizationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OrganizationStatus) DeepCopyInto(out *OrganizationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OrganizationStatus.
func (in *OrganizationStatus) DeepCopy() *OrganizationStatus {
	if in == nil {
		return nil
	}
	out := new(OrganizationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoliciesInitParameters) DeepCopyInto(out *PoliciesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoliciesInitParameters.
func (in *PoliciesInitParameters) DeepCopy() *PoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoliciesObservation) DeepCopyInto(out *PoliciesObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PolicyItem != nil {
		in, out := &in.PolicyItem, &out.PolicyItem
		*out = make([]PolicyItemObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoliciesObservation.
func (in *PoliciesObservation) DeepCopy() *PoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(PoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PoliciesParameters) DeepCopyInto(out *PoliciesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PoliciesParameters.
func (in *PoliciesParameters) DeepCopy() *PoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(PoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyItemInitParameters) DeepCopyInto(out *PolicyItemInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyItemInitParameters.
func (in *PolicyItemInitParameters) DeepCopy() *PolicyItemInitParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyItemInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyItemObservation) DeepCopyInto(out *PolicyItemObservation) {
	*out = *in
	if in.FrequencyInterval != nil {
		in, out := &in.FrequencyInterval, &out.FrequencyInterval
		*out = new(float64)
		**out = **in
	}
	if in.FrequencyType != nil {
		in, out := &in.FrequencyType, &out.FrequencyType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RetentionUnit != nil {
		in, out := &in.RetentionUnit, &out.RetentionUnit
		*out = new(string)
		**out = **in
	}
	if in.RetentionValue != nil {
		in, out := &in.RetentionValue, &out.RetentionValue
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyItemObservation.
func (in *PolicyItemObservation) DeepCopy() *PolicyItemObservation {
	if in == nil {
		return nil
	}
	out := new(PolicyItemObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PolicyItemParameters) DeepCopyInto(out *PolicyItemParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PolicyItemParameters.
func (in *PolicyItemParameters) DeepCopy() *PolicyItemParameters {
	if in == nil {
		return nil
	}
	out := new(PolicyItemParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointInitParameters) DeepCopyInto(out *PrivateEndpointInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointInitParameters.
func (in *PrivateEndpointInitParameters) DeepCopy() *PrivateEndpointInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointObservation) DeepCopyInto(out *PrivateEndpointObservation) {
	*out = *in
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.Endpoints != nil {
		in, out := &in.Endpoints, &out.Endpoints
		*out = make([]EndpointsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SrvConnectionString != nil {
		in, out := &in.SrvConnectionString, &out.SrvConnectionString
		*out = new(string)
		**out = **in
	}
	if in.SrvShardOptimizedConnectionString != nil {
		in, out := &in.SrvShardOptimizedConnectionString, &out.SrvShardOptimizedConnectionString
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointObservation.
func (in *PrivateEndpointObservation) DeepCopy() *PrivateEndpointObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateEndpointParameters) DeepCopyInto(out *PrivateEndpointParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateEndpointParameters.
func (in *PrivateEndpointParameters) DeepCopy() *PrivateEndpointParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateEndpointParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Project) DeepCopyInto(out *Project) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Project.
func (in *Project) DeepCopy() *Project {
	if in == nil {
		return nil
	}
	out := new(Project)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Project) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectInitParameters) DeepCopyInto(out *ProjectInitParameters) {
	*out = *in
	if in.IsCollectDatabaseSpecificsStatisticsEnabled != nil {
		in, out := &in.IsCollectDatabaseSpecificsStatisticsEnabled, &out.IsCollectDatabaseSpecificsStatisticsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsDataExplorerEnabled != nil {
		in, out := &in.IsDataExplorerEnabled, &out.IsDataExplorerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsExtendedStorageSizesEnabled != nil {
		in, out := &in.IsExtendedStorageSizesEnabled, &out.IsExtendedStorageSizesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPerformanceAdvisorEnabled != nil {
		in, out := &in.IsPerformanceAdvisorEnabled, &out.IsPerformanceAdvisorEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsRealtimePerformancePanelEnabled != nil {
		in, out := &in.IsRealtimePerformancePanelEnabled, &out.IsRealtimePerformancePanelEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSchemaAdvisorEnabled != nil {
		in, out := &in.IsSchemaAdvisorEnabled, &out.IsSchemaAdvisorEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = make([]LimitsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.ProjectOwnerID != nil {
		in, out := &in.ProjectOwnerID, &out.ProjectOwnerID
		*out = new(string)
		**out = **in
	}
	if in.RegionUsageRestrictions != nil {
		in, out := &in.RegionUsageRestrictions, &out.RegionUsageRestrictions
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]TeamsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WithDefaultAlertsSettings != nil {
		in, out := &in.WithDefaultAlertsSettings, &out.WithDefaultAlertsSettings
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectInitParameters.
func (in *ProjectInitParameters) DeepCopy() *ProjectInitParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectList) DeepCopyInto(out *ProjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Project, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectList.
func (in *ProjectList) DeepCopy() *ProjectList {
	if in == nil {
		return nil
	}
	out := new(ProjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectObservation) DeepCopyInto(out *ProjectObservation) {
	*out = *in
	if in.ClusterCount != nil {
		in, out := &in.ClusterCount, &out.ClusterCount
		*out = new(float64)
		**out = **in
	}
	if in.Created != nil {
		in, out := &in.Created, &out.Created
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsCollectDatabaseSpecificsStatisticsEnabled != nil {
		in, out := &in.IsCollectDatabaseSpecificsStatisticsEnabled, &out.IsCollectDatabaseSpecificsStatisticsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsDataExplorerEnabled != nil {
		in, out := &in.IsDataExplorerEnabled, &out.IsDataExplorerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsExtendedStorageSizesEnabled != nil {
		in, out := &in.IsExtendedStorageSizesEnabled, &out.IsExtendedStorageSizesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPerformanceAdvisorEnabled != nil {
		in, out := &in.IsPerformanceAdvisorEnabled, &out.IsPerformanceAdvisorEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsRealtimePerformancePanelEnabled != nil {
		in, out := &in.IsRealtimePerformancePanelEnabled, &out.IsRealtimePerformancePanelEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSchemaAdvisorEnabled != nil {
		in, out := &in.IsSchemaAdvisorEnabled, &out.IsSchemaAdvisorEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = make([]LimitsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.ProjectOwnerID != nil {
		in, out := &in.ProjectOwnerID, &out.ProjectOwnerID
		*out = new(string)
		**out = **in
	}
	if in.RegionUsageRestrictions != nil {
		in, out := &in.RegionUsageRestrictions, &out.RegionUsageRestrictions
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]TeamsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WithDefaultAlertsSettings != nil {
		in, out := &in.WithDefaultAlertsSettings, &out.WithDefaultAlertsSettings
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectObservation.
func (in *ProjectObservation) DeepCopy() *ProjectObservation {
	if in == nil {
		return nil
	}
	out := new(ProjectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectParameters) DeepCopyInto(out *ProjectParameters) {
	*out = *in
	if in.IsCollectDatabaseSpecificsStatisticsEnabled != nil {
		in, out := &in.IsCollectDatabaseSpecificsStatisticsEnabled, &out.IsCollectDatabaseSpecificsStatisticsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsDataExplorerEnabled != nil {
		in, out := &in.IsDataExplorerEnabled, &out.IsDataExplorerEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsExtendedStorageSizesEnabled != nil {
		in, out := &in.IsExtendedStorageSizesEnabled, &out.IsExtendedStorageSizesEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPerformanceAdvisorEnabled != nil {
		in, out := &in.IsPerformanceAdvisorEnabled, &out.IsPerformanceAdvisorEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsRealtimePerformancePanelEnabled != nil {
		in, out := &in.IsRealtimePerformancePanelEnabled, &out.IsRealtimePerformancePanelEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSchemaAdvisorEnabled != nil {
		in, out := &in.IsSchemaAdvisorEnabled, &out.IsSchemaAdvisorEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = make([]LimitsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.ProjectOwnerID != nil {
		in, out := &in.ProjectOwnerID, &out.ProjectOwnerID
		*out = new(string)
		**out = **in
	}
	if in.RegionUsageRestrictions != nil {
		in, out := &in.RegionUsageRestrictions, &out.RegionUsageRestrictions
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Teams != nil {
		in, out := &in.Teams, &out.Teams
		*out = make([]TeamsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WithDefaultAlertsSettings != nil {
		in, out := &in.WithDefaultAlertsSettings, &out.WithDefaultAlertsSettings
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectParameters.
func (in *ProjectParameters) DeepCopy() *ProjectParameters {
	if in == nil {
		return nil
	}
	out := new(ProjectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpec) DeepCopyInto(out *ProjectSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpec.
func (in *ProjectSpec) DeepCopy() *ProjectSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectStatus) DeepCopyInto(out *ProjectStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectStatus.
func (in *ProjectStatus) DeepCopy() *ProjectStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionsConfigInitParameters) DeepCopyInto(out *RegionsConfigInitParameters) {
	*out = *in
	if in.AnalyticsNodes != nil {
		in, out := &in.AnalyticsNodes, &out.AnalyticsNodes
		*out = new(float64)
		**out = **in
	}
	if in.ElectableNodes != nil {
		in, out := &in.ElectableNodes, &out.ElectableNodes
		*out = new(float64)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ReadOnlyNodes != nil {
		in, out := &in.ReadOnlyNodes, &out.ReadOnlyNodes
		*out = new(float64)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionsConfigInitParameters.
func (in *RegionsConfigInitParameters) DeepCopy() *RegionsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionsConfigObservation) DeepCopyInto(out *RegionsConfigObservation) {
	*out = *in
	if in.AnalyticsNodes != nil {
		in, out := &in.AnalyticsNodes, &out.AnalyticsNodes
		*out = new(float64)
		**out = **in
	}
	if in.ElectableNodes != nil {
		in, out := &in.ElectableNodes, &out.ElectableNodes
		*out = new(float64)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ReadOnlyNodes != nil {
		in, out := &in.ReadOnlyNodes, &out.ReadOnlyNodes
		*out = new(float64)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionsConfigObservation.
func (in *RegionsConfigObservation) DeepCopy() *RegionsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(RegionsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionsConfigParameters) DeepCopyInto(out *RegionsConfigParameters) {
	*out = *in
	if in.AnalyticsNodes != nil {
		in, out := &in.AnalyticsNodes, &out.AnalyticsNodes
		*out = new(float64)
		**out = **in
	}
	if in.ElectableNodes != nil {
		in, out := &in.ElectableNodes, &out.ElectableNodes
		*out = new(float64)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.ReadOnlyNodes != nil {
		in, out := &in.ReadOnlyNodes, &out.ReadOnlyNodes
		*out = new(float64)
		**out = **in
	}
	if in.RegionName != nil {
		in, out := &in.RegionName, &out.RegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionsConfigParameters.
func (in *RegionsConfigParameters) DeepCopy() *RegionsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(RegionsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationSpecsInitParameters) DeepCopyInto(out *ReplicationSpecsInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NumShards != nil {
		in, out := &in.NumShards, &out.NumShards
		*out = new(float64)
		**out = **in
	}
	if in.RegionsConfig != nil {
		in, out := &in.RegionsConfig, &out.RegionsConfig
		*out = make([]RegionsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationSpecsInitParameters.
func (in *ReplicationSpecsInitParameters) DeepCopy() *ReplicationSpecsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicationSpecsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationSpecsObservation) DeepCopyInto(out *ReplicationSpecsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NumShards != nil {
		in, out := &in.NumShards, &out.NumShards
		*out = new(float64)
		**out = **in
	}
	if in.RegionsConfig != nil {
		in, out := &in.RegionsConfig, &out.RegionsConfig
		*out = make([]RegionsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationSpecsObservation.
func (in *ReplicationSpecsObservation) DeepCopy() *ReplicationSpecsObservation {
	if in == nil {
		return nil
	}
	out := new(ReplicationSpecsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ReplicationSpecsParameters) DeepCopyInto(out *ReplicationSpecsParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NumShards != nil {
		in, out := &in.NumShards, &out.NumShards
		*out = new(float64)
		**out = **in
	}
	if in.RegionsConfig != nil {
		in, out := &in.RegionsConfig, &out.RegionsConfig
		*out = make([]RegionsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneName != nil {
		in, out := &in.ZoneName, &out.ZoneName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ReplicationSpecsParameters.
func (in *ReplicationSpecsParameters) DeepCopy() *ReplicationSpecsParameters {
	if in == nil {
		return nil
	}
	out := new(ReplicationSpecsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotBackupPolicyInitParameters) DeepCopyInto(out *SnapshotBackupPolicyInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotBackupPolicyInitParameters.
func (in *SnapshotBackupPolicyInitParameters) DeepCopy() *SnapshotBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotBackupPolicyObservation) DeepCopyInto(out *SnapshotBackupPolicyObservation) {
	*out = *in
	if in.ClusterID != nil {
		in, out := &in.ClusterID, &out.ClusterID
		*out = new(string)
		**out = **in
	}
	if in.ClusterName != nil {
		in, out := &in.ClusterName, &out.ClusterName
		*out = new(string)
		**out = **in
	}
	if in.NextSnapshot != nil {
		in, out := &in.NextSnapshot, &out.NextSnapshot
		*out = new(string)
		**out = **in
	}
	if in.Policies != nil {
		in, out := &in.Policies, &out.Policies
		*out = make([]PoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReferenceHourOfDay != nil {
		in, out := &in.ReferenceHourOfDay, &out.ReferenceHourOfDay
		*out = new(float64)
		**out = **in
	}
	if in.ReferenceMinuteOfHour != nil {
		in, out := &in.ReferenceMinuteOfHour, &out.ReferenceMinuteOfHour
		*out = new(float64)
		**out = **in
	}
	if in.RestoreWindowDays != nil {
		in, out := &in.RestoreWindowDays, &out.RestoreWindowDays
		*out = new(float64)
		**out = **in
	}
	if in.UpdateSnapshots != nil {
		in, out := &in.UpdateSnapshots, &out.UpdateSnapshots
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotBackupPolicyObservation.
func (in *SnapshotBackupPolicyObservation) DeepCopy() *SnapshotBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(SnapshotBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SnapshotBackupPolicyParameters) DeepCopyInto(out *SnapshotBackupPolicyParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SnapshotBackupPolicyParameters.
func (in *SnapshotBackupPolicyParameters) DeepCopy() *SnapshotBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(SnapshotBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsInitParameters) DeepCopyInto(out *TagsInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsInitParameters.
func (in *TagsInitParameters) DeepCopy() *TagsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TagsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsObservation) DeepCopyInto(out *TagsObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsObservation.
func (in *TagsObservation) DeepCopy() *TagsObservation {
	if in == nil {
		return nil
	}
	out := new(TagsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TagsParameters) DeepCopyInto(out *TagsParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TagsParameters.
func (in *TagsParameters) DeepCopy() *TagsParameters {
	if in == nil {
		return nil
	}
	out := new(TagsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Team) DeepCopyInto(out *Team) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Team.
func (in *Team) DeepCopy() *Team {
	if in == nil {
		return nil
	}
	out := new(Team)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Team) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamInitParameters) DeepCopyInto(out *TeamInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Usernames != nil {
		in, out := &in.Usernames, &out.Usernames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamInitParameters.
func (in *TeamInitParameters) DeepCopy() *TeamInitParameters {
	if in == nil {
		return nil
	}
	out := new(TeamInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamList) DeepCopyInto(out *TeamList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Team, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamList.
func (in *TeamList) DeepCopy() *TeamList {
	if in == nil {
		return nil
	}
	out := new(TeamList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TeamList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamObservation) DeepCopyInto(out *TeamObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
	if in.Usernames != nil {
		in, out := &in.Usernames, &out.Usernames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamObservation.
func (in *TeamObservation) DeepCopy() *TeamObservation {
	if in == nil {
		return nil
	}
	out := new(TeamObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamParameters) DeepCopyInto(out *TeamParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Usernames != nil {
		in, out := &in.Usernames, &out.Usernames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamParameters.
func (in *TeamParameters) DeepCopy() *TeamParameters {
	if in == nil {
		return nil
	}
	out := new(TeamParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamSpec) DeepCopyInto(out *TeamSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamSpec.
func (in *TeamSpec) DeepCopy() *TeamSpec {
	if in == nil {
		return nil
	}
	out := new(TeamSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamStatus) DeepCopyInto(out *TeamStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamStatus.
func (in *TeamStatus) DeepCopy() *TeamStatus {
	if in == nil {
		return nil
	}
	out := new(TeamStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Teams) DeepCopyInto(out *Teams) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Teams.
func (in *Teams) DeepCopy() *Teams {
	if in == nil {
		return nil
	}
	out := new(Teams)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Teams) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamsInitParameters) DeepCopyInto(out *TeamsInitParameters) {
	*out = *in
	if in.RoleNames != nil {
		in, out := &in.RoleNames, &out.RoleNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamsInitParameters.
func (in *TeamsInitParameters) DeepCopy() *TeamsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TeamsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamsInitParameters_2) DeepCopyInto(out *TeamsInitParameters_2) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Usernames != nil {
		in, out := &in.Usernames, &out.Usernames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamsInitParameters_2.
func (in *TeamsInitParameters_2) DeepCopy() *TeamsInitParameters_2 {
	if in == nil {
		return nil
	}
	out := new(TeamsInitParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamsList) DeepCopyInto(out *TeamsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Teams, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamsList.
func (in *TeamsList) DeepCopy() *TeamsList {
	if in == nil {
		return nil
	}
	out := new(TeamsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TeamsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamsObservation) DeepCopyInto(out *TeamsObservation) {
	*out = *in
	if in.RoleNames != nil {
		in, out := &in.RoleNames, &out.RoleNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamsObservation.
func (in *TeamsObservation) DeepCopy() *TeamsObservation {
	if in == nil {
		return nil
	}
	out := new(TeamsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamsObservation_2) DeepCopyInto(out *TeamsObservation_2) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
	if in.Usernames != nil {
		in, out := &in.Usernames, &out.Usernames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamsObservation_2.
func (in *TeamsObservation_2) DeepCopy() *TeamsObservation_2 {
	if in == nil {
		return nil
	}
	out := new(TeamsObservation_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamsParameters) DeepCopyInto(out *TeamsParameters) {
	*out = *in
	if in.RoleNames != nil {
		in, out := &in.RoleNames, &out.RoleNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TeamID != nil {
		in, out := &in.TeamID, &out.TeamID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamsParameters.
func (in *TeamsParameters) DeepCopy() *TeamsParameters {
	if in == nil {
		return nil
	}
	out := new(TeamsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamsParameters_2) DeepCopyInto(out *TeamsParameters_2) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.Usernames != nil {
		in, out := &in.Usernames, &out.Usernames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamsParameters_2.
func (in *TeamsParameters_2) DeepCopy() *TeamsParameters_2 {
	if in == nil {
		return nil
	}
	out := new(TeamsParameters_2)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamsSpec) DeepCopyInto(out *TeamsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamsSpec.
func (in *TeamsSpec) DeepCopy() *TeamsSpec {
	if in == nil {
		return nil
	}
	out := new(TeamsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamsStatus) DeepCopyInto(out *TeamsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamsStatus.
func (in *TeamsStatus) DeepCopy() *TeamsStatus {
	if in == nil {
		return nil
	}
	out := new(TeamsStatus)
	in.DeepCopyInto(out)
	return out
}
