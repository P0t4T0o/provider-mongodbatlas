---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: triggers.event.mongodbatlas.crossplane.io
spec:
  group: event.mongodbatlas.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - mongodbatlas
    kind: Trigger
    listKind: TriggerList
    plural: triggers
    singular: trigger
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Trigger is the Schema for the Triggers API. Provides a Event
          Trigger resource.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: TriggerSpec defines the desired state of Trigger
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  appId:
                    description: The ObjectID of your application.
                    type: string
                  configCollection:
                    description: Optional for DATABASE type. The name of the MongoDB
                      collection that the trigger watches for change events. The collection
                      must be part of the specified database.
                    type: string
                  configDatabase:
                    description: Required for DATABASE type. The name of the MongoDB
                      database to watch.
                    type: string
                  configFullDocument:
                    description: Optional for DATABASE type. If true, indicates that
                      UPDATE change events should include the most current majority-committed
                      version of the modified document in the fullDocument field.
                    type: boolean
                  configFullDocumentBefore:
                    type: boolean
                  configMatch:
                    description: Optional for DATABASE type. A $match expression document
                      that MongoDB Realm includes in the underlying change stream
                      pipeline for the trigger. This is useful when you want to filter
                      change events beyond their operation type. The trigger will
                      only fire if the expression evaluates to true for a given change
                      event.
                    type: string
                  configOperationType:
                    description: 'Required for AUTHENTICATION type. The authentication
                      operation type to listen for. Possible Values: LOGIN, CREATE,
                      DELETE'
                    type: string
                  configOperationTypes:
                    description: 'Required for DATABASE type. The database event operation
                      types to listen for. This must contain at least one value. Possible
                      Values: INSERT, UPDATE, REPLACE, DELETE'
                    items:
                      type: string
                    type: array
                  configProject:
                    description: Optional for DATABASE type. A $project expression
                      document that Realm uses to filter the fields that appear in
                      change event objects.
                    type: string
                  configProviders:
                    description: Required for AUTHENTICATION type. A list of one or
                      more authentication provider id values. The trigger will only
                      listen for authentication events produced by these providers.
                    items:
                      type: string
                    type: array
                  configSchedule:
                    description: Required for SCHEDULED type. A cron expression that
                      defines the trigger schedule.
                    type: string
                  configServiceId:
                    description: Required for DATABASE type. The ID of the MongoDB
                      Service associated with the trigger.
                    type: string
                  disabled:
                    description: 'Default: false If true, the trigger is disabled.'
                    type: boolean
                  eventProcessors:
                    description: 'An object where each field name is an event processor
                      ID and each value is an object that configures its corresponding
                      event processor. The following event processors are supported:
                      AWS_EVENTBRIDGE For an example configuration object, see Send
                      Trigger Events to AWS EventBridge.'
                    items:
                      properties:
                        awsEventbridge:
                          items:
                            properties:
                              configAccountId:
                                description: AWS Account ID.
                                type: string
                              configRegion:
                                description: Region of AWS Account.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  functionId:
                    description: The ID of the function associated with the trigger.
                    type: string
                  name:
                    description: The name of the trigger.
                    type: string
                  projectId:
                    description: The unique ID for the project to create the trigger.
                    type: string
                  type:
                    description: 'The type of the trigger. Possible Values: DATABASE,
                      AUTHENTICATION,SCHEDULED'
                    type: string
                  unordered:
                    description: Only Available for Database Triggers. If true, event
                      ordering is disabled and this trigger can process events in
                      parallel. If false, event ordering is enabled and the trigger
                      executes serially.
                    type: boolean
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  appId:
                    description: The ObjectID of your application.
                    type: string
                  configCollection:
                    description: Optional for DATABASE type. The name of the MongoDB
                      collection that the trigger watches for change events. The collection
                      must be part of the specified database.
                    type: string
                  configDatabase:
                    description: Required for DATABASE type. The name of the MongoDB
                      database to watch.
                    type: string
                  configFullDocument:
                    description: Optional for DATABASE type. If true, indicates that
                      UPDATE change events should include the most current majority-committed
                      version of the modified document in the fullDocument field.
                    type: boolean
                  configFullDocumentBefore:
                    type: boolean
                  configMatch:
                    description: Optional for DATABASE type. A $match expression document
                      that MongoDB Realm includes in the underlying change stream
                      pipeline for the trigger. This is useful when you want to filter
                      change events beyond their operation type. The trigger will
                      only fire if the expression evaluates to true for a given change
                      event.
                    type: string
                  configOperationType:
                    description: 'Required for AUTHENTICATION type. The authentication
                      operation type to listen for. Possible Values: LOGIN, CREATE,
                      DELETE'
                    type: string
                  configOperationTypes:
                    description: 'Required for DATABASE type. The database event operation
                      types to listen for. This must contain at least one value. Possible
                      Values: INSERT, UPDATE, REPLACE, DELETE'
                    items:
                      type: string
                    type: array
                  configProject:
                    description: Optional for DATABASE type. A $project expression
                      document that Realm uses to filter the fields that appear in
                      change event objects.
                    type: string
                  configProviders:
                    description: Required for AUTHENTICATION type. A list of one or
                      more authentication provider id values. The trigger will only
                      listen for authentication events produced by these providers.
                    items:
                      type: string
                    type: array
                  configSchedule:
                    description: Required for SCHEDULED type. A cron expression that
                      defines the trigger schedule.
                    type: string
                  configServiceId:
                    description: Required for DATABASE type. The ID of the MongoDB
                      Service associated with the trigger.
                    type: string
                  disabled:
                    description: 'Default: false If true, the trigger is disabled.'
                    type: boolean
                  eventProcessors:
                    description: 'An object where each field name is an event processor
                      ID and each value is an object that configures its corresponding
                      event processor. The following event processors are supported:
                      AWS_EVENTBRIDGE For an example configuration object, see Send
                      Trigger Events to AWS EventBridge.'
                    items:
                      properties:
                        awsEventbridge:
                          items:
                            properties:
                              configAccountId:
                                description: AWS Account ID.
                                type: string
                              configRegion:
                                description: Region of AWS Account.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  functionId:
                    description: The ID of the function associated with the trigger.
                    type: string
                  name:
                    description: The name of the trigger.
                    type: string
                  projectId:
                    description: The unique ID for the project to create the trigger.
                    type: string
                  type:
                    description: 'The type of the trigger. Possible Values: DATABASE,
                      AUTHENTICATION,SCHEDULED'
                    type: string
                  unordered:
                    description: Only Available for Database Triggers. If true, event
                      ordering is disabled and this trigger can process events in
                      parallel. If false, event ordering is enabled and the trigger
                      executes serially.
                    type: boolean
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.appId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.appId)
                || (has(self.initProvider) && has(self.initProvider.appId))'
            - message: spec.forProvider.name is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.name)
                || (has(self.initProvider) && has(self.initProvider.name))'
            - message: spec.forProvider.projectId is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.projectId)
                || (has(self.initProvider) && has(self.initProvider.projectId))'
            - message: spec.forProvider.type is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.type)
                || (has(self.initProvider) && has(self.initProvider.type))'
          status:
            description: TriggerStatus defines the observed state of Trigger.
            properties:
              atProvider:
                properties:
                  appId:
                    description: The ObjectID of your application.
                    type: string
                  configCollection:
                    description: Optional for DATABASE type. The name of the MongoDB
                      collection that the trigger watches for change events. The collection
                      must be part of the specified database.
                    type: string
                  configDatabase:
                    description: Required for DATABASE type. The name of the MongoDB
                      database to watch.
                    type: string
                  configFullDocument:
                    description: Optional for DATABASE type. If true, indicates that
                      UPDATE change events should include the most current majority-committed
                      version of the modified document in the fullDocument field.
                    type: boolean
                  configFullDocumentBefore:
                    type: boolean
                  configMatch:
                    description: Optional for DATABASE type. A $match expression document
                      that MongoDB Realm includes in the underlying change stream
                      pipeline for the trigger. This is useful when you want to filter
                      change events beyond their operation type. The trigger will
                      only fire if the expression evaluates to true for a given change
                      event.
                    type: string
                  configOperationType:
                    description: 'Required for AUTHENTICATION type. The authentication
                      operation type to listen for. Possible Values: LOGIN, CREATE,
                      DELETE'
                    type: string
                  configOperationTypes:
                    description: 'Required for DATABASE type. The database event operation
                      types to listen for. This must contain at least one value. Possible
                      Values: INSERT, UPDATE, REPLACE, DELETE'
                    items:
                      type: string
                    type: array
                  configProject:
                    description: Optional for DATABASE type. A $project expression
                      document that Realm uses to filter the fields that appear in
                      change event objects.
                    type: string
                  configProviders:
                    description: Required for AUTHENTICATION type. A list of one or
                      more authentication provider id values. The trigger will only
                      listen for authentication events produced by these providers.
                    items:
                      type: string
                    type: array
                  configSchedule:
                    description: Required for SCHEDULED type. A cron expression that
                      defines the trigger schedule.
                    type: string
                  configScheduleType:
                    description: 'The type of the trigger. Possible Values: DATABASE,
                      AUTHENTICATION,SCHEDULED'
                    type: string
                  configServiceId:
                    description: Required for DATABASE type. The ID of the MongoDB
                      Service associated with the trigger.
                    type: string
                  disabled:
                    description: 'Default: false If true, the trigger is disabled.'
                    type: boolean
                  eventProcessors:
                    description: 'An object where each field name is an event processor
                      ID and each value is an object that configures its corresponding
                      event processor. The following event processors are supported:
                      AWS_EVENTBRIDGE For an example configuration object, see Send
                      Trigger Events to AWS EventBridge.'
                    items:
                      properties:
                        awsEventbridge:
                          items:
                            properties:
                              configAccountId:
                                description: AWS Account ID.
                                type: string
                              configRegion:
                                description: Region of AWS Account.
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  functionId:
                    description: The ID of the function associated with the trigger.
                    type: string
                  functionName:
                    description: The name of the function associated with the trigger.
                    type: string
                  id:
                    type: string
                  name:
                    description: The name of the trigger.
                    type: string
                  projectId:
                    description: The unique ID for the project to create the trigger.
                    type: string
                  triggerId:
                    description: The unique ID of the trigger.
                    type: string
                  type:
                    description: 'The type of the trigger. Possible Values: DATABASE,
                      AUTHENTICATION,SCHEDULED'
                    type: string
                  unordered:
                    description: Only Available for Database Triggers. If true, event
                      ordering is disabled and this trigger can process events in
                      parallel. If false, event ordering is enabled and the trigger
                      executes serially.
                    type: boolean
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
